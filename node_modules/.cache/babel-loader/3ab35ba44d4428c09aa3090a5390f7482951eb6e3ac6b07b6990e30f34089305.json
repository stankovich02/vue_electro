{"ast":null,"code":"export default {\n  name: \"TextField\",\n  props: {\n    value: {\n      type: String,\n      default: \"\"\n    },\n    rowCount: {\n      type: String,\n      default: \"3\"\n    },\n    multiline: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"text\"\n    },\n    id: {\n      type: String\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    error: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      localValue: \"\"\n    };\n  },\n  mounted() {\n    this.localValue = this.value;\n  },\n  computed: {\n    style: function () {\n      return this.error ? \"border: 1px solid red\" : \"\";\n    },\n    showHint: function () {\n      return !this.error && this.hint;\n    }\n  },\n  watch: {\n    localValue: function () {\n      this.$emit(\"input\", this.localValue);\n    },\n    value: function () {\n      this.localValue = this.value;\n    }\n  }\n};","map":{"version":3,"names":["name","props","value","type","String","default","rowCount","multiline","Boolean","id","label","placeholder","error","data","localValue","mounted","computed","style","showHint","hint","watch","$emit"],"sources":["src/components/forms/TextInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"mb-3\">\r\n        <label v-if=\"label\" :for=\"id\">{{ label }}</label>\r\n        <textarea :style=\"style\"  v-if=\"multiline\" :rows=\"rowCount\" class=\"form-control\" :id=\"id\" v-model=\"localValue\"></textarea>\r\n        <input :style=\"style\"  v-else :type=\"type\" :placeholder=\"placeholder\" class=\"form-control\" :id=\"id\" v-model=\"localValue\">\r\n        <div v-if=\"error\" class=\"alert p-1 mt-2 alert-danger\" role=\"alert\">\r\n            {{ error }}\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"TextField\",\r\n    props: {\r\n        value: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        rowCount: {\r\n            type: String,\r\n            default: \"3\"\r\n        },\r\n        multiline: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        type: {\r\n            type: String,\r\n            default: \"text\"\r\n        },\r\n        id: {\r\n            type: String\r\n        },\r\n        label: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        placeholder: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        error: {\r\n            type: String\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            localValue: \"\"\r\n        }\r\n    },\r\n    mounted() {\r\n        this.localValue = this.value\r\n    },\r\n    computed: {\r\n        style: function() {\r\n            return this.error ? \"border: 1px solid red\" : \"\"\r\n        },\r\n        showHint: function() {\r\n            return !this.error && this.hint;\r\n        }\r\n    },  \r\n    watch: {\r\n        localValue: function() {\r\n            this.$emit(\"input\", this.localValue)\r\n        },\r\n        value: function() {\r\n            this.localValue = this.value\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"AAWA;EACAA,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,QAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,SAAA;MACAJ,IAAA,EAAAK,OAAA;MACAH,OAAA;IACA;IACAF,IAAA;MACAA,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAI,EAAA;MACAN,IAAA,EAAAC;IACA;IACAM,KAAA;MACAP,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAM,WAAA;MACAR,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAO,KAAA;MACAT,IAAA,EAAAC;IACA;EACA;EACAS,KAAA;IACA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAD,UAAA,QAAAZ,KAAA;EACA;EACAc,QAAA;IACAC,KAAA,WAAAA,CAAA;MACA,YAAAL,KAAA;IACA;IACAM,QAAA,WAAAA,CAAA;MACA,aAAAN,KAAA,SAAAO,IAAA;IACA;EACA;EACAC,KAAA;IACAN,UAAA,WAAAA,CAAA;MACA,KAAAO,KAAA,eAAAP,UAAA;IACA;IACAZ,KAAA,WAAAA,CAAA;MACA,KAAAY,UAAA,QAAAZ,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}