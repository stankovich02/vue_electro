{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"EditProduct\",\n  data() {\n    return {\n      name: \"\",\n      brand_id: 0,\n      brands: [],\n      categories: [],\n      category_id: 0,\n      product_id: 0,\n      image_src: null,\n      image_alt: null,\n      in_stock: 0,\n      price: 0\n    };\n  },\n  mounted() {\n    var that = this;\n    this.$axios.get('models/getDataForID.php?table=brand&getData=true').then(response => {\n      that.brands = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n    this.$axios.get('models/getDataForID.php?table=category&getData=true').then(response => {\n      that.categories = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n    if (this.$route.params.id) {\n      for (let p of this.products) {\n        if (p.product_id == this.$route.params.id) {\n          this.product_id = p.product_id, this.image_src = p.image_src, this.price = p.price, this.name = p.name, this.brand_id = p.brand_id, this.category_id = p.category_id, this.image_alt = p.image_alt, this.in_stock = p.in_stock;\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\"products\"])\n  },\n  methods: {\n    edit: function () {\n      this.$store.commit(\"updateProduct\", {\n        id: this.product_id,\n        name: this.name,\n        price: this.price\n      });\n      this.$router.push(\"/store\");\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","brand_id","brands","categories","category_id","product_id","image_src","image_alt","in_stock","price","mounted","that","$axios","get","then","response","catch","error","console","log","$route","params","id","p","products","computed","methods","edit","$store","commit","$router","push"],"sources":["src/components/pages/EditProduct.vue"],"sourcesContent":["<template>\r\n    <div class=\"mx-auto w-25 py-5\">\r\n        <TextInput id=\"name\" label=\"Name:\" v-model=\"name\"/>\r\n        <TextInput type=\"number\"  id=\"price\" label=\"Price:\" v-model=\"price\"/>\r\n        <label for=\"brand\">Brand:</label><br/>\r\n        <select>\r\n            <option v-for=\"b in brands\" :key=\"b.brand_id\" id=\"brand\" :value=\"b.brand_id\">{{ b.brand_name }}</option>\r\n        </select>\r\n        <label for=\"category\">Category:</label><br/>\r\n        <select>\r\n            <option v-for=\"c in categories\" :key=\"c.category_id\" id=\"category\" :value=\"c.category_id\">{{ c.category_name }}</option>\r\n        </select>\r\n                <!-- <div class=\"form-group\">\r\n                        <label for=\"\">Image</label>\r\n                        <input type=\"text\" v-model=\"image\" class=\"form-control\" placeholder=\"Image URL\" />\r\n\r\n                        <img v-if=\"image\" width=\"300\" :src=\"image\" class=\"img img-round\" alt=\"\">\r\n                </div>\r\n             -->\r\n             <div class=\"mt-5 text-center\">\r\n                <Button buttonText=\"Edit\" @wasClicked=\"edit()\"/>\r\n            </div>\r\n       </div>    \r\n    </template>\r\n    <script>\r\n    import { mapGetters } from \"vuex\"\r\n    export default {\r\n        name: \"EditProduct\",\r\n        data() {\r\n            return {\r\n                name: \"\",\r\n                brand_id: 0,\r\n                brands: [],\r\n                categories: [],\r\n                category_id: 0,\r\n                product_id: 0,\r\n                image_src: null,\r\n                image_alt: null,\r\n                in_stock: 0,\r\n                price: 0,\r\n            }\r\n        },\r\n        mounted() {\r\n            var that = this\r\n            this.$axios.get('models/getDataForID.php?table=brand&getData=true').then(response => {\r\n                that.brands = response.data\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            this.$axios.get('models/getDataForID.php?table=category&getData=true').then(response => {\r\n                that.categories = response.data\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            if(this.$route.params.id) {\r\n                for(let p of this.products){\r\n                    if(p.product_id == this.$route.params.id){\r\n                        this.product_id = p.product_id,\r\n                        this.image_src = p.image_src,\r\n                        this.price = p.price,\r\n                        this.name = p.name,\r\n                        this.brand_id = p.brand_id,\r\n                        this.category_id = p.category_id,\r\n                        this.image_alt = p.image_alt,\r\n                        this.in_stock = p.in_stock\r\n                    }\r\n                }\r\n                \r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters([\"products\"])\r\n        },\r\n        methods:{\r\n            edit: function() {\r\n                this.$store.commit(\"updateProduct\", { id: this.product_id, name: this.name, price: this.price})\r\n                this.$router.push(\"/store\")\r\n            }\r\n        }\r\n    }\r\n    </script>"],"mappings":";AAyBA,SAAAA,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAD,IAAA;MACAE,QAAA;MACAC,MAAA;MACAC,UAAA;MACAC,WAAA;MACAC,UAAA;MACAC,SAAA;MACAC,SAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,IAAAC,IAAA;IACA,KAAAC,MAAA,CAAAC,GAAA,qDAAAC,IAAA,CAAAC,QAAA;MACAJ,IAAA,CAAAT,MAAA,GAAAa,QAAA,CAAAf,IAAA;IACA,GAAAgB,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;IACA;IACA,KAAAL,MAAA,CAAAC,GAAA,wDAAAC,IAAA,CAAAC,QAAA;MACAJ,IAAA,CAAAR,UAAA,GAAAY,QAAA,CAAAf,IAAA;IACA,GAAAgB,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;IACA;IACA,SAAAG,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA,SAAAC,CAAA,SAAAC,QAAA;QACA,IAAAD,CAAA,CAAAlB,UAAA,SAAAe,MAAA,CAAAC,MAAA,CAAAC,EAAA;UACA,KAAAjB,UAAA,GAAAkB,CAAA,CAAAlB,UAAA,EACA,KAAAC,SAAA,GAAAiB,CAAA,CAAAjB,SAAA,EACA,KAAAG,KAAA,GAAAc,CAAA,CAAAd,KAAA,EACA,KAAAV,IAAA,GAAAwB,CAAA,CAAAxB,IAAA,EACA,KAAAE,QAAA,GAAAsB,CAAA,CAAAtB,QAAA,EACA,KAAAG,WAAA,GAAAmB,CAAA,CAAAnB,WAAA,EACA,KAAAG,SAAA,GAAAgB,CAAA,CAAAhB,SAAA,EACA,KAAAC,QAAA,GAAAe,CAAA,CAAAf,QAAA;QACA;MACA;IAEA;EACA;EACAiB,QAAA;IACA,GAAA3B,UAAA;EACA;EACA4B,OAAA;IACAC,IAAA,WAAAA,CAAA;MACA,KAAAC,MAAA,CAAAC,MAAA;QAAAP,EAAA,OAAAjB,UAAA;QAAAN,IAAA,OAAAA,IAAA;QAAAU,KAAA,OAAAA;MAAA;MACA,KAAAqB,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}