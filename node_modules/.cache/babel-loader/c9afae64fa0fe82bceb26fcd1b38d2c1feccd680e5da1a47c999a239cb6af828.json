{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"RegisterComponent\",\n  data() {\n    return {\n      user: {\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        repassword: \"\"\n      },\n      error: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters(['users', 'role'])\n  },\n  mounted() {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user != null && user.role != \"unauthorized\") {\n      this.$router.push(\"/\");\n    }\n  },\n  methods: {\n    registerUser() {\n      if (!this.user.email || !this.user.username || !this.user.password || !this.user.repassword) {\n        this.error = \"All fields are required.\";\n        return;\n      }\n      let user = {\n        email: this.user.email,\n        username: this.user.username,\n        password: this.user.password,\n        role: \"user\"\n      };\n      this.$store.commit(\"registerUser\", user);\n      this.user = {\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        repassword: \"\"\n      };\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","user","email","username","password","repassword","error","computed","mounted","JSON","parse","localStorage","getItem","role","$router","push","methods","registerUser","$store","commit"],"sources":["src/components/pages/Register.vue"],"sourcesContent":["<template>\r\n   <div class=\"mx-auto w-25 py-5\">\r\n    <h1 class=\"text-center\">Register</h1>\r\n        <ValidationProvider name=\"Email\" rules=\"emailRegex\" v-slot=\"{ errors }\">\r\n            <TextInput :error=\"errors[0]\" id=\"email\" label=\"Email\" placeholder=\"Type your email...\" v-model=\"user.email\"/>\r\n        </ValidationProvider>\r\n        <ValidationProvider name=\"Username\" rules=\"usernameRegex\" v-slot=\"{ errors }\">\r\n            <TextInput :error=\"errors[0]\" id=\"username\" label=\"Username\" placeholder=\"Type username...\" v-model=\"user.username\"/>\r\n        </ValidationProvider>\r\n        <ValidationProvider name=\"Password\" rules=\"passwordRegex\" v-slot=\"{ errors }\">\r\n            <TextInput :error=\"errors[0]\" type=\"password\" label=\"Password\" placeholder=\"Type password...\" id=\"password\" v-model=\"user.password\"/>\r\n        </ValidationProvider>\r\n        <ValidationProvider name=\"Repeated password\" rules=\"\" v-slot=\"{ errors }\">\r\n            <TextInput :error=\"errors[0]\" type=\"password\" label=\"Retype password\"  placeholder=\"Retype password...\" id=\"repassword\" v-model=\"user.repassword\"/>\r\n        </ValidationProvider>\r\n        <div v-if=\"user.repassword && user.password != user.repassword \" class=\"alert p-1 mt-2 alert-danger\" role=\"alert\">\r\n            Passwords do not match.\r\n        </div>\r\n        <div class=\"mt-5 text-center\">\r\n            <Button buttonText=\"Register\" @wasClicked=\"registerUser\"/>\r\n        </div>\r\n        <div class=\"w=50 mx-auto\" v-if=\"error\">\r\n        <br>\r\n            <div class=\"alert alert-danger text-center fs-3\">\r\n                {{ error }}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import { mapGetters } from \"vuex\"\r\n    export default {\r\n        name: \"RegisterComponent\",\r\n        data() {\r\n            return {\r\n                user: \r\n                {\r\n                    email: \"\",\r\n                    username: \"\",\r\n                    password: \"\",\r\n                    repassword: \"\"\r\n                },\r\n                error: \"\"\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters(['users', 'role'])\r\n        },\r\n        mounted() {\r\n           let user = JSON.parse(localStorage.getItem(\"user\"))\r\n           if(user != null && user.role != \"unauthorized\") {\r\n               this.$router.push(\"/\");\r\n           }\r\n        },\r\n        methods: {\r\n            registerUser() {\r\n                if(!this.user.email || !this.user.username || !this.user.password || !this.user.repassword) {\r\n                    this.error = \"All fields are required.\";\r\n                    return;\r\n                }\r\n                let user = {\r\n                    email: this.user.email,\r\n                    username: this.user.username,\r\n                    password: this.user.password,\r\n                    role: \"user\"\r\n                }\r\n                this.$store.commit(\"registerUser\", user);\r\n                this.user = {\r\n                    email: \"\",\r\n                    username: \"\",\r\n                    password: \"\",\r\n                    repassword: \"\"\r\n                };\r\n                this.$router.push(\"/login\");\r\n            },\r\n        }\r\n    }\r\n</script>"],"mappings":";AA8BA,SAAAA,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EACA;QACAC,KAAA;QACAC,QAAA;QACAC,QAAA;QACAC,UAAA;MACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAT,UAAA;EACA;EACAU,QAAA;IACA,IAAAP,IAAA,GAAAQ,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,IAAAX,IAAA,YAAAA,IAAA,CAAAY,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAA;MACA,UAAAhB,IAAA,CAAAC,KAAA,UAAAD,IAAA,CAAAE,QAAA,UAAAF,IAAA,CAAAG,QAAA,UAAAH,IAAA,CAAAI,UAAA;QACA,KAAAC,KAAA;QACA;MACA;MACA,IAAAL,IAAA;QACAC,KAAA,OAAAD,IAAA,CAAAC,KAAA;QACAC,QAAA,OAAAF,IAAA,CAAAE,QAAA;QACAC,QAAA,OAAAH,IAAA,CAAAG,QAAA;QACAS,IAAA;MACA;MACA,KAAAK,MAAA,CAAAC,MAAA,iBAAAlB,IAAA;MACA,KAAAA,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,QAAA;QACAC,UAAA;MACA;MACA,KAAAS,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}