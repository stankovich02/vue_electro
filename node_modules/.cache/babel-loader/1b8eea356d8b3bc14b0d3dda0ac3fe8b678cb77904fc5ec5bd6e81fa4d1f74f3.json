{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      table: this.$route.params.table,\n      categories: [],\n      brands: []\n    };\n  },\n  name: \"AdminComponent\",\n  computed: {\n    ...mapGetters([\"products\"])\n  },\n  mounted() {\n    let user = JSON.parse(localStorage.getItem('user'));\n    if (user == null) {\n      this.$router.push('/login');\n    }\n    if (user.role != \"admin\") {\n      this.$router.push('/');\n    }\n    var that = this;\n    this.$axios.get(\"models/getDataForID.php?table=brand&getData=true\").then(response => {\n      that.brands = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n    this.$axios.get(\"models/getDataForID.php?table=category&getData=true\").then(response => {\n      that.categories = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  methods: {\n    returnImgSrc(src) {\n      return src + '_small.png';\n    },\n    returnCatName(id) {\n      for (let c of this.categories) {\n        if (c.category_id == id) {\n          return c.category_name;\n        }\n      }\n    },\n    returnBrandName(id) {\n      for (let b of this.brands) {\n        if (b.brand_id == id) {\n          return b.brand_name;\n        }\n      }\n    },\n    editProduct: function (id) {\n      this.$router.push(\"/edit-product/\" + id);\n    },\n    deleteProduct: function (id) {\n      this.$store.commit(\"deleteProduct\", id);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","table","$route","params","categories","brands","name","computed","mounted","user","JSON","parse","localStorage","getItem","$router","push","role","that","$axios","get","then","response","catch","error","console","log","methods","returnImgSrc","src","returnCatName","id","c","category_id","category_name","returnBrandName","b","brand_id","brand_name","editProduct","deleteProduct","$store","commit"],"sources":["src/components/pages/Admin.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h1 class=\"text-center mt-5\">{{table.toUpperCase()}}</h1>\r\n        <router-link to=\"/insert-product\"><a class=\"btn btn-primary mt-auto my-5\">Add new product</a></router-link>\r\n        <table class=\"table table-bordered\">\r\n            <thead class=\"thead-dark\">\r\n                <th>Id</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Brand</th>\r\n                <th>Category</th>\r\n                <th>Image</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"p of products\" :key=\"p.product_id\">\r\n                    <td>{{p.product_id}}</td>\r\n                    <td>{{p.name}}</td>\r\n                    <td>{{p.price}}</td>\r\n                    <td>{{returnBrandName(p.brand_id)}}</td>\r\n                    <td>{{returnCatName(p.category_id)}}</td>\r\n                    <td><img :src=\"returnImgSrc(p.image_src)\" :alt=\"p.name\" class=\"pictureTable\"></td>\r\n                    <td><button class=\"btn btn-primary\" @click=\"editProduct(p.product_id)\">Edit</button></td>\r\n                    <td><button class=\"btn btn-danger\" @click=\"deleteProduct(p.product_id)\">Delete</button></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n</template>\r\n<script>\r\nimport {mapGetters} from 'vuex';\r\n    export default{\r\n        data() {\r\n        return {\r\n            table : this.$route.params.table,\r\n            categories: [],\r\n            brands: [],\r\n        }\r\n    },\r\n        name:\"AdminComponent\",\r\n        computed:{\r\n            ...mapGetters([\"products\"])\r\n        },\r\n        mounted(){\r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            if(user == null){\r\n                this.$router.push('/login');\r\n            }\r\n            if(user.role != \"admin\"){\r\n                    this.$router.push('/');\r\n            }\r\n            var that = this;\r\n            this.$axios.get(\"models/getDataForID.php?table=brand&getData=true\").then(response => {\r\n                that.brands = response.data;\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n            this.$axios.get(\"models/getDataForID.php?table=category&getData=true\").then(response => {\r\n                that.categories = response.data;\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        },\r\n        methods:{\r\n            returnImgSrc(src){\r\n\t\t\treturn src + '_small.png';\r\n\t\t    },\r\n            returnCatName(id){\r\n                for(let c of this.categories){\r\n                    if(c.category_id == id){\r\n                        return c.category_name;\r\n                    }\r\n                }\r\n            },\r\n            returnBrandName(id){\r\n                for(let b of this.brands){\r\n                    if(b.brand_id == id){\r\n                        return b.brand_name;\r\n                    }\r\n                }\r\n            },\r\n            editProduct: function(id) {\r\n\t\t\t    this.$router.push(\"/edit-product/\" + id)\r\n            },\r\n            deleteProduct: function(id){\r\n                this.$store.commit(\"deleteProduct\", id)\r\n            }       \r\n        }\r\n        \r\n    }\r\n</script>\r\n<style>\r\n.pictureTable{\r\n    width: 100px;\r\n}\r\ntable th{\r\n    text-align: center;\r\n    padding: 10px 0px;\r\n}\r\ntd{\r\n    vertical-align: middle!important;\r\n    text-align: center;\r\n}\r\n</style>"],"mappings":";AAgCA,SAAAA,UAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,KAAA;MACAG,UAAA;MACAC,MAAA;IACA;EACA;EACAC,IAAA;EACAC,QAAA;IACA,GAAAR,UAAA;EACA;EACAS,QAAA;IACA,IAAAC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,IAAAJ,IAAA;MACA,KAAAK,OAAA,CAAAC,IAAA;IACA;IACA,IAAAN,IAAA,CAAAO,IAAA;MACA,KAAAF,OAAA,CAAAC,IAAA;IACA;IACA,IAAAE,IAAA;IACA,KAAAC,MAAA,CAAAC,GAAA,qDAAAC,IAAA,CAAAC,QAAA;MACAJ,IAAA,CAAAZ,MAAA,GAAAgB,QAAA,CAAArB,IAAA;IACA,GAAAsB,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;IACA;IACA,KAAAL,MAAA,CAAAC,GAAA,wDAAAC,IAAA,CAAAC,QAAA;MACAJ,IAAA,CAAAb,UAAA,GAAAiB,QAAA,CAAArB,IAAA;IACA,GAAAsB,KAAA,CAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;IACA;EACA;EACAG,OAAA;IACAC,aAAAC,GAAA;MACA,OAAAA,GAAA;IACA;IACAC,cAAAC,EAAA;MACA,SAAAC,CAAA,SAAA3B,UAAA;QACA,IAAA2B,CAAA,CAAAC,WAAA,IAAAF,EAAA;UACA,OAAAC,CAAA,CAAAE,aAAA;QACA;MACA;IACA;IACAC,gBAAAJ,EAAA;MACA,SAAAK,CAAA,SAAA9B,MAAA;QACA,IAAA8B,CAAA,CAAAC,QAAA,IAAAN,EAAA;UACA,OAAAK,CAAA,CAAAE,UAAA;QACA;MACA;IACA;IACAC,WAAA,WAAAA,CAAAR,EAAA;MACA,KAAAhB,OAAA,CAAAC,IAAA,oBAAAe,EAAA;IACA;IACAS,aAAA,WAAAA,CAAAT,EAAA;MACA,KAAAU,MAAA,CAAAC,MAAA,kBAAAX,EAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}