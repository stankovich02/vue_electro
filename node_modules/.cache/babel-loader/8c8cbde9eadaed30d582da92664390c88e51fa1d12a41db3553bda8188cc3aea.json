{"ast":null,"code":"import products from '@/store/modules/products';\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"EditProduct\",\n  data() {\n    return {\n      name: null,\n      brand_id: null,\n      category_id: null,\n      image_src: null,\n      image_alt: null,\n      in_stock: null,\n      product_id: null,\n      price: null\n    };\n  },\n  mounted() {\n    this.product_id = this.$route.params.id;\n    if (this.$route.params.id) {\n      console.log(\"aaaa\");\n      for (let p of products) {\n        if (p.product_id == this.product_id) {\n          this.image_src = p.image_src, this.price = p.price, this.name = p.name, this.brand_id = p.brand_id, this.category_id = p.category_id, this.image_alt = p.image_alt, this.in_stock = p.in_stock;\n        }\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\"products\"])\n  },\n  methods: {\n    edit: function () {\n      this.$store.commit(\"updateProduct\", {\n        id: this.id,\n        name: this.name,\n        price: this.price,\n        image: this.image\n      });\n    }\n  }\n};","map":{"version":3,"names":["products","mapGetters","name","data","brand_id","category_id","image_src","image_alt","in_stock","product_id","price","mounted","$route","params","id","console","log","p","computed","methods","edit","$store","commit","image"],"sources":["src/components/pages/EditProduct.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"container\">\r\n                <ValidationProvider name=\"name\" rules=\"\" v-slot=\"{ errors }\">\r\n                    <TextInput :error=\"errors[0]\" id=\"name\" label=\"Name\"  v-model=\"name\"/>\r\n                </ValidationProvider>\r\n                <ValidationProvider name=\"price\" rules=\"\" v-slot=\"{ errors }\">\r\n                    <TextInput type=\"number\" :error=\"errors[0]\" id=\"price\" label=\"Price\"  v-model=\"price\"/>\r\n                </ValidationProvider>\r\n                <ValidationProvider name=\"brand\" rules=\"\" v-slot=\"{ errors }\">\r\n                    <TextInput type=\"number\" :error=\"errors[0]\" id=\"brand\" label=\"Brand\" v-model=\"brand_id\"/>\r\n                </ValidationProvider>\r\n                <ValidationProvider name=\"category\" rules=\"\" v-slot=\"{ errors }\">\r\n                    <TextInput type=\"number\" :error=\"errors[0]\" id=\"category\" label=\"Category\"  v-model=\"category_id\"/>\r\n                </ValidationProvider>\r\n                <!-- <div class=\"form-group\">\r\n                        <label for=\"\">Image</label>\r\n                        <input type=\"text\" v-model=\"image\" class=\"form-control\" placeholder=\"Image URL\" />\r\n\r\n                        <img v-if=\"image\" width=\"300\" :src=\"image\" class=\"img img-round\" alt=\"\">\r\n                </div>\r\n             -->\r\n                <button @click=\"edit()\" class=\"btn btn-primary\" >Edit</button>\r\n        </div>\r\n       </div>    \r\n    </template>\r\n    <script>\r\nimport products from '@/store/modules/products'\r\n    import { mapGetters } from \"vuex\"\r\n    export default {\r\n        name: \"EditProduct\",\r\n        data() {\r\n            return {\r\n                name: null,\r\n                brand_id: null,\r\n                category_id: null,\r\n                image_src: null,\r\n                image_alt: null,\r\n                in_stock: null,\r\n                product_id: null,\r\n                price: null,\r\n            }\r\n        },\r\n        mounted() {\r\n            this.product_id = this.$route.params.id;\r\n            if(this.$route.params.id) {\r\n                console.log(\"aaaa\");\r\n                for(let p of products){\r\n                    if(p.product_id == this.product_id){\r\n                        this.image_src = p.image_src,\r\n                        this.price = p.price,\r\n                        this.name = p.name,\r\n                        this.brand_id = p.brand_id,\r\n                        this.category_id = p.category_id,\r\n                        this.image_alt = p.image_alt,\r\n                        this.in_stock = p.in_stock\r\n                    }\r\n                }\r\n                \r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters([\"products\"])\r\n        },\r\n        methods:{\r\n            edit: function() {\r\n                this.$store.commit(\"updateProduct\", { id: this.id, name: this.name, price: this.price, image: this.image  })\r\n            }\r\n        }\r\n    }\r\n    </script>"],"mappings":"AA2BA,OAAAA,QAAA;AACA,SAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAD,IAAA;MACAE,QAAA;MACAC,WAAA;MACAC,SAAA;MACAC,SAAA;MACAC,QAAA;MACAC,UAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAF,UAAA,QAAAG,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,SAAAF,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACAC,OAAA,CAAAC,GAAA;MACA,SAAAC,CAAA,IAAAjB,QAAA;QACA,IAAAiB,CAAA,CAAAR,UAAA,SAAAA,UAAA;UACA,KAAAH,SAAA,GAAAW,CAAA,CAAAX,SAAA,EACA,KAAAI,KAAA,GAAAO,CAAA,CAAAP,KAAA,EACA,KAAAR,IAAA,GAAAe,CAAA,CAAAf,IAAA,EACA,KAAAE,QAAA,GAAAa,CAAA,CAAAb,QAAA,EACA,KAAAC,WAAA,GAAAY,CAAA,CAAAZ,WAAA,EACA,KAAAE,SAAA,GAAAU,CAAA,CAAAV,SAAA,EACA,KAAAC,QAAA,GAAAS,CAAA,CAAAT,QAAA;QACA;MACA;IAEA;EACA;EACAU,QAAA;IACA,GAAAjB,UAAA;EACA;EACAkB,OAAA;IACAC,IAAA,WAAAA,CAAA;MACA,KAAAC,MAAA,CAAAC,MAAA;QAAAR,EAAA,OAAAA,EAAA;QAAAZ,IAAA,OAAAA,IAAA;QAAAQ,KAAA,OAAAA,KAAA;QAAAa,KAAA,OAAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}